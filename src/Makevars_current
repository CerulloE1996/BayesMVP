



#####    Compiler settings     ###  ccache
### set compiler types
#CXX_COMPILER_TYPE =     ccache  g++
#CPP_COMPILER_TYPE =     ccache  gcc
#BASE_FLAGS =  -O3  -march=native  -mtune=native   -D_REENTRANT    -DSTAN_THREADS -pthread  -fPIC


#CXX_FLAGS += -fno-tree-vectorize  # for g++  -  Disable auto vectorization
#CXX_FLAGS += -fno-optimize-sibling-calls  # for g++  -   Disable tail call optimization
#CXX_FLAGS += -fno-schedule-insns2  # for g++  -   Disable instruction scheduling

## LD_LIBRARY_PATH += -L/usr/lib/


CXX_COMPILER_TYPE =      ccache   /opt/AMD/aocc-compiler-5.0.0/bin/clang++
CPP_COMPILER_TYPE =      ccache  /opt/AMD/aocc-compiler-5.0.0/bin/clang
BASE_FLAGS =  -O3  -march=znver4  -mtune=znver4   -fPIC    -D_REENTRANT  -DSTAN_THREADS -pthread

## BASE_FLAGS +=  -mllvm --openmp-opt-shared-limit=96  ### -inlinehint-threshold=20000000 # for clang++




# Use C++17
CXX_STD = CXX17



BASE_FLAGS +=  -DNDEBUG  -ffp-contract=fast

BASE_FLAGS +=  -mfma -mavx -mavx2
BASE_FLAGS +=       -mfma  -mavx512vl -mavx512dq  -mavx512f

#### BASE_FLAGS +=   -fno-math-errno    -fno-signed-zeros  -fno-trapping-math  ### oordered from safest ( -fno-math-errno ) tto least-safe ( -fno-trapping-math)
BASE_FLAGS += -fno-math-errno
BASE_FLAGS +=  -fno-signed-zeros
BASE_FLAGS +=  -fno-trapping-math

#### BASE_FLAGS +=       -DEIGEN_VECTORIZE



#### BASE_FLAGS +=  -finline-limit=20000000 ## for g++
PKG_LIBS += -L/usr/lib/gcc/x86_64-linux-gnu/11 -lgomp  ### for g++
PKG_CXXFLAGS += -fopenmp ### for g++
BASE_FLAGS +=  -fopenmp ### for g++



#PKG_CXXFLAGS += -fopenmp



###BASE_FLAGS += -Xclang -fopenmp ### for clang++
###BASE_FLAGS += -lomp  ### for clang++





####### OpenMP flags for AMD AOCC clang++:
#LD_LIBRARY_PATH += /opt/AMD/aocc-compiler-5.0.0/lib
#PKG_LIBS += /opt/AMD/aocc-compiler-5.0.0/lib/libomp.so
#PKG_LIBS += -L/opt/AMD/aocc-compiler-5.0.0/lib -lomp -Wl,-rpath,/opt/AMD/aocc-compiler-5.0.0/lib
#PKG_CXXFLAGS += -fopenmp=libomp ## for AMD AOCC clang++
### PKG_LIBS += -lomp ### for AMD AOCC clang++
## PKG_LIBS += -L/usr/lib/llvm-14/lib -lomp
## PKG_CXXFLAGS += -fopenmp

### BASE_FLAGS +=   /opt/AMD/aocc-compiler-5.0.0/lib/libomp.so
## PKG_CXXFLAGS += -Xclang -fopenmp
### PKG_LIBS += -L/usr/lib/x86_64-linux-gnu -lomp

CC =  $(CPP_COMPILER_TYPE)
CFLAGS =  $(BASE_FLAGS)
CC14 = $(CPP_COMPILER_TYPE)
C14FLAGS = $(BASE_FLAGS)
CC17 = $(CPP_COMPILER_TYPE)
C17FLAGS = $(BASE_FLAGS)
CC23 =  $(CPP_COMPILER_TYPE)
C23FLAGS =  $(BASE_FLAGS)
CC90 =  $(CPP_COMPILER_TYPE)
C90FLAGS = $(BASE_FLAGS)
CC99 =  $(CPP_COMPILER_TYPE)
99FLAGS = $(BASE_FLAGS)


CXX = $(CXX_COMPILER_TYPE)
CXXFLAGS = $(BASE_FLAGS)
CXXPICFLAGS = -fpic

CXX11 = $(CXX_COMPILER_TYPE)
CXX11FLAGS = $(BASE_FLAGS)
CXX11PICFLAGS = -fpic

CXX14 = $(CXX_COMPILER_TYPE)
CXX14FLAGS = $(BASE_FLAGS)
CXX14PICFLAGS = -fpic

CXX17 = $(CXX_COMPILER_TYPE)
CXX17FLAGS =  $(BASE_FLAGS)
CXX17PICFLAGS = -fpic

CXX20 = $(CXX_COMPILER_TYPE)
CXX20FLAGS =   $(BASE_FLAGS)
CXX20PICFLAGS = -fpic

CXX23 = $(CXX_COMPILER_TYPE)
CXX23FLAGS =   $(BASE_FLAGS)
CXX23PICFLAGS = -fpic





#######    BayesmMVP and BridgeStan paths
BAYESMVP_R_PKG_DIR=$(HOME)/Documents/Work/PhD_work/R_packages/BayesMVP

BRIDGESTAN_PATH = $(HOME)/bridgestan
BRIDGESTAN_SRC = $(BRIDGESTAN_PATH)/src

STAN_PATH = $(HOME)/.cmdstan/cmdstan-2.35.0/stan
#### STAN_PATH = $(HOME)/cmdstan/stan


STAN_SRC =  $(STAN_PATH)/src
STAN_MATH =  $(STAN_PATH)/lib/stan_math
TBB_PATH = $(STAN_MATH)/lib/tbb
TBB_SO = $(TBB_PATH)/libtbb.so


# Include paths
PKG_CPPFLAGS=$(BASE_FLAGS)
PKG_CPPFLAGS+=-I$(BRIDGESTAN_SRC)
PKG_CPPFLAGS+=-I$(TBB_PATH)/include

PKG_CPPFLAGS+=-I$(STAN_PATH)
PKG_CPPFLAGS+=-I$(STAN_SRC)
PKG_CPPFLAGS+=-I$(STAN_MATH)
PKG_CPPFLAGS+=-I$(STAN_SRC)/stan/model
PKG_CPPFLAGS+=-I$(STAN_SRC)/stan/services
PKG_CPPFLAGS+=-I$(STAN_SRC)/stan/io
PKG_CPPFLAGS+=-I$(STAN_SRC)/stan/mcmc



PKG_CPPFLAGS+=-I$(BRIDGESTAN_SRC)
PKG_CPPFLAGS+=-I$(STAN_MATH)/lib/eigen_3.4.0 -I$(STAN_MATH)/lib/boost_1.84.0
PKG_CPPFLAGS+=-I$(STAN_MATH)/lib/sundials_6.1.1/include -I$(STAN_MATH)/lib/sundials_6.1.1/src/sundials


PKG_CPPFLAGS+=-I$(BRIDGESTAN_SRC)/bridgestan.o


PKG_CXXFLAGS = $(PKG_CPPFLAGS)  -std=c++17   -DBOOST_DISABLE_ASSERTS

CPPFLAGS += $(PKG_CPPFLAGS)
CXXFLAGS += $(PKG_CXXFLAGS)


#### PKG_LIBS += -I$(BRIDGESTAN_SRC)/bridgestan.o

### ---- load dummy model for bridgestan to compile (for Linux / Mac OS X)
PKG_LIBS+=$(BAYESMVP_R_PKG_DIR)/dummy_stan_model_model.so      ### need to load dummy model compiled using BridgeStan!! (unfortunately... need to fix)
##### PKG_LIBS +=  /home/enzocerullo/Documents/Work/PhD_work/dummy_stan_model_model.so # need to load dummy model compiled using BridgeStan!! (unfortunately... need to fix)











